-- Creación de tablas principales

CREATE TABLE clientes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    documento VARCHAR(20) UNIQUE NOT NULL,
    telefono VARCHAR(20),
    email VARCHAR(100),
    direccion VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE vehiculos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    cliente_id INT NOT NULL,
    placa VARCHAR(10) UNIQUE NOT NULL,
    marca VARCHAR(50) NOT NULL,
    modelo VARCHAR(50) NOT NULL,
    anio YEAR NOT NULL,    
    serie VARCHAR(50),
    color VARCHAR(30),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_vehiculos_clientes FOREIGN KEY (cliente_id) REFERENCES clientes(id) ON DELETE CASCADE
);

ALTER TABLE vehiculos ADD COLUMN combustible VARCHAR(50) NULL AFTER placa;


-- Creación de tablas proceso



-- Tabla para guardar los detalles de la evaluacion
CREATE TABLE evaluaciones (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    expediente_id BIGINT UNSIGNED NOT NULL,
    tecnico_id BIGINT UNSIGNED NOT NULL,
    fecha_evaluacion DATE NOT NULL,
    resultado ENUM('apto', 'no apto') NOT NULL,
    observaciones TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_evaluaciones_expediente FOREIGN KEY (expediente_id) REFERENCES expedientes(id) ON DELETE CASCADE,
    CONSTRAINT fk_evaluaciones_tecnico FOREIGN KEY (tecnico_id) REFERENCES users(id) ON DELETE RESTRICT
);

-- Tabla para el seguimiento de la conversion
CREATE TABLE conversiones (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    expediente_id BIGINT UNSIGNED NOT NULL,
    tecnico_id BIGINT UNSIGNED NOT NULL,
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE,
    estado ENUM('en_proceso', 'completado', 'certificado') DEFAULT 'en_proceso',
    observaciones TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_conversiones_expediente FOREIGN KEY (expediente_id) REFERENCES expedientes(id) ON DELETE CASCADE,
    CONSTRAINT fk_conversiones_tecnico FOREIGN KEY (tecnico_id) REFERENCES users(id) ON DELETE RESTRICT
);


CREATE TABLE control_calidad (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    conversion_id BIGINT UNSIGNED NOT NULL,
    jefe_taller_id BIGINT UNSIGNED NOT NULL,
    fecha_control DATE NOT NULL,
    resultado ENUM('aprobado', 'rechazado') NOT NULL,
    observaciones TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_control_conversion FOREIGN KEY (conversion_id) REFERENCES conversiones(id) ON DELETE CASCADE,
    CONSTRAINT fk_control_jefe FOREIGN KEY (jefe_taller_id) REFERENCES users(id) ON DELETE RESTRICT
);




-- Insertar los roles a la tabla roles
INSERT INTO roles (name, guard_name, created_at, updated_at) VALUES
('Administrador del sistema', 'web', NOW(), NOW()),
('Cliente', 'web', NOW(), NOW()),
('Vendedor', 'web', NOW(), NOW()),
('Jefe de Taller', 'web', NOW(), NOW()),
('Tecnico', 'web', NOW(), NOW()),
('Almacen', 'web', NOW(), NOW());



CREATE TABLE citas (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    cliente_id INT NOT NULL,
    vehiculo_id INT NULL,
    asesor_id BIGINT UNSIGNED NOT NULL,
    fecha_cita DATETIME NOT NULL,
    motivo TEXT,
    estado ENUM('pendiente', 'aceptada', 'rechazada', 'cancelada') DEFAULT 'pendiente',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_citas_cliente FOREIGN KEY (cliente_id) REFERENCES clientes(id) ON DELETE CASCADE,
    CONSTRAINT fk_citas_vehiculo FOREIGN KEY (vehiculo_id) REFERENCES vehiculos(id) ON DELETE SET NULL,
    CONSTRAINT fk_citas_asesor FOREIGN KEY (asesor_id) REFERENCES users(id) ON DELETE RESTRICT
);

-- actualizar el campo fecha_cita
ALTER TABLE citas MODIFY fecha_cita DATE NOT NULL;



CREATE TABLE expedientes (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    cliente_id INT NOT NULL,
    vehiculo_id INT NULL,
    cita_id BIGINT UNSIGNED NULL,
    estado INT(11) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_expediente_cliente FOREIGN KEY (cliente_id) REFERENCES clientes(id) ON DELETE CASCADE,
    CONSTRAINT fk_expediente_vehiculo FOREIGN KEY (vehiculo_id) REFERENCES vehiculos(id) ON DELETE SET NULL,
    CONSTRAINT fk_expediente_cita FOREIGN KEY (cita_id) REFERENCES citas(id) ON DELETE SET NULL
);

CREATE TABLE tipos_documento (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    nombre_tipo VARCHAR(100) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE documentos_expediente (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    expediente_id BIGINT UNSIGNED NOT NULL,
    tipo_documento_id BIGINT UNSIGNED NOT NULL,
    nombre VARCHAR(200) NOT NULL,
    ruta VARCHAR(500) NOT NULL,
    extension VARCHAR(10) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_documentos_expediente_expediente FOREIGN KEY (expediente_id) REFERENCES expedientes(id) ON DELETE CASCADE,
    CONSTRAINT fk_documentos_expediente_tipo FOREIGN KEY (tipo_documento_id) REFERENCES tipos_documento(id) ON DELETE RESTRICT
);



-- Para el registro de la consulta y respuesta del FISE.

CREATE TABLE fise_solicitudes (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    cliente_id INT NOT NULL,
    vehiculo_id INT NOT NULL,
    fecha_solicitud DATETIME NOT NULL,
    fecha_respuesta DATETIME NULL,
    estado ENUM('pendiente', 'aprobado', 'rechazado') DEFAULT 'pendiente',
    observaciones TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_fise_cliente FOREIGN KEY (cliente_id) REFERENCES clientes(id) ON DELETE CASCADE,
    CONSTRAINT fk_fise_vehiculo FOREIGN KEY (vehiculo_id) REFERENCES vehiculos(id) ON DELETE CASCADE
);




--  Tablas expedientes y control_calidad aun no han sido reemplazadas pero considerar nuevos campos.
-- Tu tabla expedientes (ajustada para ser el centro del proceso)
CREATE TABLE expedientes (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    cita_id BIGINT UNSIGNED NOT NULL,
    cliente_id INT NOT NULL,
    vehiculo_id INT NOT NULL,
    jefe_taller_id BIGINT UNSIGNED,
    tecnico_id BIGINT UNSIGNED,
    estado ENUM('en_evaluacion', 'evaluacion_rechazada', 'aprobado_conversion', 'en_conversion', 'conversion_completada', 'en_control_calidad', 'listo_para_entrega', 'entregado', 'cancelado') DEFAULT 'en_evaluacion',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_expediente_cita FOREIGN KEY (cita_id) REFERENCES citas(id) ON DELETE CASCADE,
    CONSTRAINT fk_expediente_cliente FOREIGN KEY (cliente_id) REFERENCES clientes(id) ON DELETE CASCADE,
    CONSTRAINT fk_expediente_vehiculo FOREIGN KEY (vehiculo_id) REFERENCES vehiculos(id) ON DELETE CASCADE,
    CONSTRAINT fk_expediente_jefe_taller FOREIGN KEY (jefe_taller_id) REFERENCES users(id) ON DELETE RESTRICT,
    CONSTRAINT fk_expediente_tecnico FOREIGN KEY (tecnico_id) REFERENCES users(id) ON DELETE RESTRICT
);
-- Tabla para el control de calidad
CREATE TABLE control_calidad (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    expediente_id BIGINT UNSIGNED NOT NULL,
    jefe_taller_id BIGINT UNSIGNED NOT NULL,
    fecha_control DATE NOT NULL,
    resultado ENUM('aprobado', 'rechazado') NOT NULL,
    observaciones TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_control_expediente FOREIGN KEY (expediente_id) REFERENCES expedientes(id) ON DELETE CASCADE,
    CONSTRAINT fk_control_jefe FOREIGN KEY (jefe_taller_id) REFERENCES users(id) ON DELETE RESTRICT
);




-- 1. Crear la tabla `repuestos`
-- Esta tabla almacena un catálogo de todos los repuestos disponibles.

CREATE TABLE repuestos (
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(255) NOT NULL,
    descripcion TEXT NULL,
    precio DECIMAL(8, 2) NOT NULL,
    stock INT UNSIGNED NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- 2. Crear la tabla `conversion_detalles`
-- Esta es la tabla pivote que relaciona conversiones con repuestos.

CREATE TABLE conversion_detalles (
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    conversion_id BIGINT UNSIGNED NOT NULL,
    repuesto_id BIGINT UNSIGNED NOT NULL,
    cantidad_utilizada INT UNSIGNED NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    CONSTRAINT fk_conversion_detalles_conversion_id
        FOREIGN KEY (conversion_id)
        REFERENCES conversiones (id)
        ON DELETE CASCADE,

    CONSTRAINT fk_conversion_detalles_repuesto_id
        FOREIGN KEY (repuesto_id)
        REFERENCES repuestos (id)
        ON DELETE RESTRICT
);


